version: "3.3"

services:

  postgres:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my_memo_master_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.mmm-prod-pgadmin.rule=Host(`pgadmin.my-memo-master.com`)
      - traefik.http.routers.mmm-prod-pgadmin.entrypoints=websecure
      - traefik.http.routers.mmm-prod-pgadmin.tls.certresolver=letsencrypt
      - traefik.http.services.mmm-prod-pgadmin.loadbalancer.server.port=80
      - traefik.docker.network=traefik_proxy
    networks:
      - my_memo_master_network
      - traefik_proxy
    restart: unless-stopped

  api:
    image: fredissimo/mymemomaster_api:latest
    env_file:
      - .env
    volumes:
      - api-data:/app/data
    environment:
      NODE_ENV: production
      API_PORT: ${API_PORT}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_DB: ${PG_DB}
      PG_HOST: ${PG_HOST:-postgres}
      PG_PORT: 5432
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.mmm-prod-api.rule=Host(`api.my-memo-master.com`)
      - traefik.http.routers.mmm-prod-api.entrypoints=websecure
      - traefik.http.routers.mmm-prod-api.tls.certresolver=letsencrypt
      - traefik.http.services.mmm-prod-api.loadbalancer.server.port=${API_PORT}
      - traefik.docker.network=traefik_proxy
    networks:
      - my_memo_master_network
      - traefik_proxy
    restart: unless-stopped

  front:
    image: fredissimo/mymemomaster_front:latest
    volumes:
      - front-data:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.mmm-prod-front.rule=Host(`my-memo-master.com`,`www.my-memo-master.com`)
      - traefik.http.routers.mmm-prod-front.entrypoints=websecure
      - traefik.http.routers.mmm-prod-front.tls.certresolver=letsencrypt
      - traefik.http.services.mmm-prod-front.loadbalancer.server.port=80
      - traefik.docker.network=traefik_proxy
    networks:
      - my_memo_master_network
      - traefik_proxy
    restart: unless-stopped

volumes:
  api-data:
  front-data:
  postgres-data:
  pgadmin-data:

networks:
  my_memo_master_network:
    driver: bridge
  traefik_proxy:
    external: true
