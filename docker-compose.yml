# File docker-compose.yml

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - my_memo_master_network

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${PG_PORT}:5432"
    networks:
      - my_memo_master_network

  pgadmin:
    build:
      context: ./postgres
      dockerfile: Dockerfile-pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - my_memo_master_network

  front:
    image: node:18-alpine
    working_dir: /app
    env_file: .env
    volumes:
      - ./my_memo_master_front:/app
    environment:
      - CHOKIDAR_USEPOLLING=1
      - VITE_PORT=${VITE_PORT:-5173}
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0 --port ${VITE_PORT:-5173}"
    networks:
      - my_memo_master_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=PathPrefix(`/`)"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.services.front.loadbalancer.server.port=${VITE_PORT}"

  api:
    image: node:18-alpine
    working_dir: /app
    env_file: .env
    environment:
      - NODE_ENV=development
      - API_PORT=${API_PORT:-3000}
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB=${PG_DB}
    volumes:
      - ./my_memo_master_api:/app
    command: sh -c "npm ci && (npx --yes nodemon --watch . --ext js,ts --exec \"npm start\" || npm start)"
    depends_on:
      - postgres
    networks:
      - my_memo_master_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.api.middlewares=api-strip"
      - "traefik.http.services.api.loadbalancer.server.port=${API_PORT}"

volumes:
  api-data:
  front-data:
  postgres-data:
  pgadmin-data:

networks:
  my_memo_master_network:
    driver: bridge
